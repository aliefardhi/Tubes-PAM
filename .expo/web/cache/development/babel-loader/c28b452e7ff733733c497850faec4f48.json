{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\IMPORTANT\\\\01. Kuliah\\\\Semester 6\\\\Pam\\\\Tubes-PAM\\\\components\\\\view\\\\Detail.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport styles from \"./Detail.Style\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport ImagePicker from 'react-native-image-picker';\nimport Toast from \"react-native-simple-toast\";\n\nvar DetailScreen = function (_Component) {\n  _inherits(DetailScreen, _Component);\n\n  var _super = _createSuper(DetailScreen);\n\n  function DetailScreen(props) {\n    var _this;\n\n    _classCallCheck(this, DetailScreen);\n\n    _this = _super.call(this, props);\n    _this.idNote = _this.props.navigation.state.params.idNote;\n    _this.refTextInputContent = null;\n    _this.refTextInputTitle = null;\n    _this.state = {\n      isLoading: false,\n      detailNote: null,\n      newImage: null,\n      isKeyboardShow: false,\n      keyboardHeight: 0\n    };\n    return _this;\n  }\n\n  _createClass(DetailScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.toolbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.viewWrapIcLeft,\n        onPress: this.handleBackPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }\n      }, React.createElement(MaterialCommunityIcons, {\n        name: 'arrow-left',\n        size: 30,\n        color: colors.white,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.viewWrapTitleToolbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.titleToolbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }\n      }, \"Detail\")), React.createElement(TouchableOpacity, {\n        style: styles.viewWrapIcRight,\n        onPress: this.deleteNote,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }\n      }, React.createElement(MaterialCommunityIcons, {\n        name: 'delete',\n        size: 30,\n        color: colors.white,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.viewWrapIcRight,\n        onPress: this.onSaveNotePress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }\n      }, React.createElement(MaterialCommunityIcons, {\n        name: 'check',\n        size: 30,\n        color: colors.white,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return DetailScreen;\n}(Component);\n\nexport { DetailScreen as default };","map":{"version":3,"sources":["D:/IMPORTANT/01. Kuliah/Semester 6/Pam/Tubes-PAM/components/view/Detail.js"],"names":["React","Component","styles","MaterialCommunityIcons","ImagePicker","Toast","DetailScreen","props","idNote","navigation","state","params","refTextInputContent","refTextInputTitle","isLoading","detailNote","newImage","isKeyboardShow","keyboardHeight","container","toolbar","viewWrapIcLeft","handleBackPress","colors","white","viewWrapTitleToolbar","titleToolbar","viewWrapIcRight","deleteNote","onSaveNotePress"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,sBAAP;AAGA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;IAMqBC,Y;;;;;AAEjB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,MAAL,GAAc,MAAKD,KAAL,CAAWE,UAAX,CAAsBC,KAAtB,CAA4BC,MAA5B,CAAmCH,MAAjD;AACA,UAAKI,mBAAL,GAA2B,IAA3B;AACA,UAAKC,iBAAL,GAAyB,IAAzB;AACA,UAAKH,KAAL,GAAa;AACTI,MAAAA,SAAS,EAAE,KADF;AAETC,MAAAA,UAAU,EAAE,IAFH;AAGTC,MAAAA,QAAQ,EAAE,IAHD;AAITC,MAAAA,cAAc,EAAE,KAJP;AAKTC,MAAAA,cAAc,EAAE;AALP,KAAb;AALe;AAYlB;;;;WA4JD,kBAAQ;AACJ,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEhB,MAAM,CAACiB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjB,MAAM,CAACkB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAElB,MAAM,CAACmB,cAAhC;AAAgD,QAAA,OAAO,EAAE,KAAKC,eAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,sBAAD;AAAwB,QAAA,IAAI,EAAE,YAA9B;AAA4C,QAAA,IAAI,EAAE,EAAlD;AAAsD,QAAA,KAAK,EAAEC,MAAM,CAACC,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAKI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEtB,MAAM,CAACuB,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEvB,MAAM,CAACwB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CALJ,EASI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAExB,MAAM,CAACyB,eAAhC;AAAiD,QAAA,OAAO,EAAE,KAAKC,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,sBAAD;AAAwB,QAAA,IAAI,EAAE,QAA9B;AAAwC,QAAA,IAAI,EAAE,EAA9C;AAAkD,QAAA,KAAK,EAAEL,MAAM,CAACC,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CATJ,EAaI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEtB,MAAM,CAACyB,eAAhC;AAAiD,QAAA,OAAO,EAAE,KAAKE,eAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,sBAAD;AAAwB,QAAA,IAAI,EAAE,OAA9B;AAAuC,QAAA,IAAI,EAAE,EAA7C;AAAiD,QAAA,KAAK,EAAEN,MAAM,CAACC,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAbJ,CADJ,CADJ;AAuBH;;;;EAlMqCvB,S;;SAArBK,Y","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, ScrollView, Text, TextInput, TouchableOpacity, BackHandler, Image, Keyboard, Platform } from 'react-native';\r\nimport styles from './Detail.Style';\r\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\r\n// import LoadingView from \"../Components/LoadingView\";\r\n// import {localNoteDb, remoteNoteDb} from \"../const\";\r\nimport ImagePicker from 'react-native-image-picker';\r\nimport Toast from \"react-native-simple-toast\";\r\n// import PouchDB from \"../pouchdb\";\r\n// import moment from \"moment\";\r\n// import {imgDefault} from \"../images\";\r\n// import NoDataView from \"../Components/NoDataView\";\r\n\r\nexport default class DetailScreen extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.idNote = this.props.navigation.state.params.idNote\r\n        this.refTextInputContent = null\r\n        this.refTextInputTitle = null\r\n        this.state = {\r\n            isLoading: false,\r\n            detailNote: null,\r\n            newImage: null,\r\n            isKeyboardShow: false,\r\n            keyboardHeight: 0,\r\n        }\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     BackHandler.removeEventListener('hardwareBackPress', this.handleBackPress)\r\n    //     handlerSync.cancel()\r\n    //     this.keyboardDidShowListener.remove()\r\n    //     this.keyboardDidHideListener.remove()\r\n    // }\r\n\r\n    // componentDidMount() {\r\n    //     BackHandler.addEventListener('hardwareBackPress', this.handleBackPress)\r\n    //     this.keyboardDidShowListener = Keyboard.addListener(\r\n    //         'keyboardDidShow',\r\n    //         this.keyboardDidShow\r\n    //     )\r\n    //     this.keyboardDidHideListener = Keyboard.addListener(\r\n    //         'keyboardDidHide',\r\n    //         this.keyboardDidHide\r\n    //     )\r\n    //     this.syncDb()\r\n    //     this.getDetailNoteFromDb()\r\n    // }\r\n\r\n    // handleBackPress = () => {\r\n    //     this.props.navigation.goBack()\r\n    //     this.props.navigation.state.params.returnFromDetail()\r\n    //     return true\r\n    // }\r\n\r\n    // keyboardDidShow = (e) => {\r\n    //     this.setState({\r\n    //         isKeyboardShow: true,\r\n    //         keyboardHeight: e.endCoordinates.height\r\n    //     })\r\n    // }\r\n\r\n    // keyboardDidHide = () => {\r\n    //     this.setState({isKeyboardShow: false})\r\n    // }\r\n\r\n    // syncDb = () => {\r\n    //     handlerSync = PouchDB.sync(remoteNoteDb, localNoteDb, {\r\n    //         live: true,\r\n    //         retry: true,\r\n    //     })\r\n    //         .on('change', (info) => {\r\n    //             // console.log(TAG, 'sync onChange', info)\r\n    //         })\r\n    //         .on('paused', (err) => {\r\n    //             // console.log(TAG, 'sync onPaused', err)\r\n    //             this.getDetailNoteFromDb()\r\n    //         })\r\n    //         .on('active', () => {\r\n    //             // console.log(TAG, 'sync onActive')\r\n    //         })\r\n    //         .on('denied', (err) => {\r\n    //             // console.log(TAG, 'sync onDenied', err)\r\n    //         })\r\n    //         .on('complete', (info) => {\r\n    //             // console.log(TAG, 'sync onComplete', info)\r\n    //         })\r\n    //         .on('error', (err) => {\r\n    //             // console.log(TAG, 'sync onError', err)\r\n    //         })\r\n    // }\r\n\r\n    // getDetailNoteFromDb = () => {\r\n    //     this.setState({isLoading: true})\r\n    //     localNoteDb\r\n    //         .get(this.idNote)\r\n    //         .then(result => {\r\n    //             // console.log(TAG, 'localNoteDb get', result)\r\n    //             this.setState({\r\n    //                 isLoading: false,\r\n    //                 detailNote: result\r\n    //             })\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.log(TAG, 'err find list note', err)\r\n    //             if (err.message === 'missing') {\r\n    //                 Toast.show('This note has been deleted')\r\n    //                 this.handleBackPress()\r\n    //             } else {\r\n    //                 this.setState({isLoading: false})\r\n    //                 Toast.show(err.message)\r\n    //             }\r\n    //         })\r\n    // }\r\n\r\n    // openGallery = () => {\r\n    //     ImagePicker.showImagePicker({\r\n    //         compressImageMaxWidth: 500,\r\n    //         compressImageMaxHeight: 500,\r\n    //         mediaType: 'photo',\r\n    //         multiple: false,\r\n    //     }, image => {\r\n    //         this.setState({newImage: image.data})\r\n    //     })\r\n    // }\r\n\r\n    // onSaveNotePress = () => {\r\n    //     Keyboard.dismiss()\r\n    //     this.updateNote()\r\n    // }\r\n\r\n    // updateNote = () => {\r\n    //     this.setState({isLoading: true})\r\n    //     localNoteDb\r\n    //         .upsert(this.idNote, doc => {\r\n    //             if (this.refTextInputTitle && this.refTextInputTitle._lastNativeText) {\r\n    //                 doc.title = this.refTextInputTitle._lastNativeText\r\n    //             }\r\n    //             if (this.state.newImage) {\r\n    //                 doc.img = this.state.newImage\r\n    //             }\r\n    //             if (this.refTextInputContent && this.refTextInputContent._lastNativeText) {\r\n    //                 doc.content = this.refTextInputContent._lastNativeText\r\n    //             }\r\n    //             doc.updated_at = moment().unix()\r\n    //             return doc\r\n    //         })\r\n    //         .then(response => {\r\n    //             if (response.updated) {\r\n    //                 Toast.show('Updated')\r\n    //                 this.setState({isLoading: false})\r\n    //             } else {\r\n    //                 Toast.show('Update fail, please try again')\r\n    //                 this.setState({isLoading: false})\r\n    //             }\r\n\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.log(TAG, err)\r\n    //             Toast.show(err.message)\r\n    //             this.setState({isLoading: false})\r\n    //         })\r\n    // }\r\n\r\n    // deleteNote = () => {\r\n    //     this.setState({isLoading: true})\r\n    //     localNoteDb.remove(this.idNote, this.state.detailNote._rev)\r\n    //         .then(response => {\r\n    //             if (response.ok) {\r\n    //                 this.handleBackPress()\r\n    //             } else {\r\n    //                 Toast.show('Delete note fail')\r\n    //                 this.setState({isLoading: false})\r\n    //             }\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.log(TAG, err)\r\n    //             Toast.show(err.message)\r\n    //             this.setState({isLoading: false})\r\n    //         })\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.toolbar}>\r\n                    <TouchableOpacity style={styles.viewWrapIcLeft} onPress={this.handleBackPress}>\r\n                        <MaterialCommunityIcons name={'arrow-left'} size={30} color={colors.white}/>\r\n                    </TouchableOpacity>\r\n                    \r\n                    <View style={styles.viewWrapTitleToolbar}>\r\n                        <Text style={styles.titleToolbar}>Detail</Text>\r\n                    </View>\r\n\r\n                    <TouchableOpacity style={styles.viewWrapIcRight} onPress={this.deleteNote}>\r\n                        <MaterialCommunityIcons name={'delete'} size={30} color={colors.white}/>\r\n                    </TouchableOpacity>\r\n                    \r\n                    <TouchableOpacity style={styles.viewWrapIcRight} onPress={this.onSaveNotePress}>\r\n                        <MaterialCommunityIcons name={'check'} size={30} color={colors.white}/>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        )\r\n\r\n\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}