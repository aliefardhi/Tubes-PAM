{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\IMPORTANT\\\\01. Kuliah\\\\Semester 6\\\\Pam\\\\Tubes-PAM\\\\components\\\\view\\\\Detail.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nvar DetailScreen = function (_Component) {\n  _inherits(DetailScreen, _Component);\n\n  var _super = _createSuper(DetailScreen);\n\n  function DetailScreen(props) {\n    var _this;\n\n    _classCallCheck(this, DetailScreen);\n\n    _this = _super.call(this, props);\n\n    _this.renderLoading = function () {\n      if (_this.state.isLoading) {\n        return React.createElement(LoadingView, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }\n        });\n      } else {\n        return null;\n      }\n    };\n\n    _this.refTextInputContent = null;\n    _this.refTextInputTitle = null;\n    _this.state = {\n      isLoading: false,\n      detailNote: null,\n      newImage: null,\n      isKeyboardShow: false,\n      keyboardHeight: 0\n    };\n    return _this;\n  }\n\n  _createClass(DetailScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.toolbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.viewWrapIcLeft,\n        onPress: this.handleBackPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }\n      }, React.createElement(MaterialCommunityIcons, {\n        name: 'arrow-left',\n        size: 30,\n        color: 'white',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.viewWrapTitleToolbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.titleToolbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }\n      }, \"Detail\")), React.createElement(TouchableOpacity, {\n        style: styles.viewWrapIcRight,\n        onPress: this.deleteNote,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }\n      }, React.createElement(MaterialCommunityIcons, {\n        name: 'delete',\n        size: 30,\n        color: 'white',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.viewWrapIcRight,\n        onPress: this.onSaveNotePress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }\n      }, React.createElement(MaterialCommunityIcons, {\n        name: 'check',\n        size: 30,\n        color: 'white',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }\n      }))), React.createElement(View, {\n        style: styles.viewWrapTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textTitle,\n        ref: function ref(_ref) {\n          return _this2.refTextInputTitle = _ref;\n        },\n        defaultValue: \"Test Title\",\n        multiline: true,\n        autoCorrect: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }\n      })), React.createElement(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textInputContent,\n        ref: function ref(_ref2) {\n          return _this2.refTextInputContent = _ref2;\n        },\n        defaultValue: \"test\",\n        multiline: true,\n        autoCorrect: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }\n      })), this.state.isKeyboardShow && Platform.OS === 'ios' ? React.createElement(View, {\n        style: {\n          height: this.state.keyboardHeight\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 29\n        }\n      }) : null));\n    }\n  }]);\n\n  return DetailScreen;\n}(Component);\n\nexport { DetailScreen as default };\nvar styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    backgroundColor: '#f4f4f6',\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingTop: 5,\n    paddingBottom: 5\n  },\n  viewList: {\n    flex: 1,\n    paddingLeft: 15,\n    paddingRight: 15\n  },\n  viewWrapItem: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    borderWidth: 1,\n    borderColor: 'grey',\n    borderRadius: 5\n  },\n  textDescription: {\n    fontSize: 12,\n    color: 'grey',\n    marginTop: 10\n  },\n  textTime: {\n    fontSize: 12,\n    color: 'lightgrey',\n    marginTop: 5\n  },\n  btnAddNew: {\n    position: 'absolute',\n    right: 20,\n    bottom: 20\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#f4f4f6'\n  },\n  toolbar: {\n    flexDirection: 'row',\n    width: '100%',\n    height: 48,\n    paddingTop: 0,\n    backgroundColor: '#2ebe60',\n    alignItems: 'center'\n  },\n  titleContainer: {\n    flex: 5,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  titleToolbar: {\n    color: 'white',\n    fontSize: 18\n  },\n  viewWrapIcLeft: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  icLeft: {\n    width: 23,\n    height: 23,\n    tintColor: 'white'\n  },\n  viewWrapIcRight: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  icRight: {\n    width: 23,\n    height: 23,\n    tintColor: 'white'\n  },\n  textRight: {\n    color: 'white',\n    fontSize: 14\n  },\n  viewHorizontalLine: {\n    backgroundColor: 'grey',\n    height: 0.5,\n    alignSelf: 'stretch'\n  },\n  textInputContent: {\n    fontSize: 14,\n    color: '#919191',\n    marginTop: 15,\n    borderWidth: 1,\n    borderColor: 'grey',\n    borderRadius: 5,\n    minHeight: 100,\n    textAlignVertical: 'top',\n    padding: 10\n  },\n  viewWrapTitle: {\n    backgroundColor: 'grey',\n    alignSelf: 'stretch',\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  textTitle: {\n    fontSize: 14,\n    color: '#30333a',\n    fontWeight: 'bold',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["D:/IMPORTANT/01. Kuliah/Semester 6/Pam/Tubes-PAM/components/view/Detail.js"],"names":["React","Component","MaterialCommunityIcons","DetailScreen","props","renderLoading","state","isLoading","refTextInputContent","refTextInputTitle","detailNote","newImage","isKeyboardShow","keyboardHeight","styles","container","toolbar","viewWrapIcLeft","handleBackPress","viewWrapTitleToolbar","titleToolbar","viewWrapIcRight","deleteNote","onSaveNotePress","viewWrapTitle","textTitle","ref","body","textInputContent","Platform","OS","height","StyleSheet","create","flex","backgroundColor","paddingLeft","paddingRight","paddingTop","paddingBottom","viewList","viewWrapItem","borderWidth","borderColor","borderRadius","textDescription","fontSize","color","marginTop","textTime","btnAddNew","position","right","bottom","flexDirection","width","alignItems","titleContainer","justifyContent","icLeft","tintColor","icRight","textRight","viewHorizontalLine","alignSelf","minHeight","textAlignVertical","padding","fontWeight"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;;;AAGA,OAAOC,sBAAP;;IAUqBC,Y;;;;;AAEjB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UA+NnBC,aA/NmB,GA+NH,YAAM;AAClB,UAAI,MAAKC,KAAL,CAAWC,SAAf,EAA0B;AACtB,eACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,OAJD,MAIO;AACH,eAAO,IAAP;AACH;AACJ,KAvOkB;;AAGf,UAAKC,mBAAL,GAA2B,IAA3B;AACA,UAAKC,iBAAL,GAAyB,IAAzB;AACA,UAAKH,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,KADF;AAETG,MAAAA,UAAU,EAAE,IAFH;AAGTC,MAAAA,QAAQ,EAAE,IAHD;AAITC,MAAAA,cAAc,EAAE,KAJP;AAKTC,MAAAA,cAAc,EAAE;AALP,KAAb;AALe;AAYlB;;;;WA4JD,kBAAQ;AAAA;;AACJ,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEF,MAAM,CAACG,cAAhC;AAAgD,QAAA,OAAO,EAAE,KAAKC,eAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,sBAAD;AAAwB,QAAA,IAAI,EAAE,YAA9B;AAA4C,QAAA,IAAI,EAAE,EAAlD;AAAsD,QAAA,KAAK,EAAE,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAKI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACM,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CALJ,EASI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEN,MAAM,CAACO,eAAhC;AAAiD,QAAA,OAAO,EAAE,KAAKC,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,sBAAD;AAAwB,QAAA,IAAI,EAAE,QAA9B;AAAwC,QAAA,IAAI,EAAE,EAA9C;AAAkD,QAAA,KAAK,EAAE,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CATJ,EAaI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAER,MAAM,CAACO,eAAhC;AAAiD,QAAA,OAAO,EAAE,KAAKE,eAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,sBAAD;AAAwB,QAAA,IAAI,EAAE,OAA9B;AAAuC,QAAA,IAAI,EAAE,EAA7C;AAAiD,QAAA,KAAK,EAAE,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAbJ,CADJ,EAmBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAET,MAAM,CAACU,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAEV,MAAM,CAACW,SADlB;AAEI,QAAA,GAAG,EAAE,aAAAC,IAAG;AAAA,iBAAI,MAAI,CAACjB,iBAAL,GAAyBiB,IAA7B;AAAA,SAFZ;AAGI,QAAA,YAAY,EAAE,YAHlB;AAII,QAAA,SAAS,EAAE,IAJf;AAKI,QAAA,WAAW,EAAE,KALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAnBJ,EA6BI,oBAAC,UAAD;AAAY,QAAA,4BAA4B,EAAE,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEZ,MAAM,CAACa,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAEb,MAAM,CAACc,gBADlB;AAEI,QAAA,GAAG,EAAE,aAAAF,KAAG;AAAA,iBAAI,MAAI,CAAClB,mBAAL,GAA2BkB,KAA/B;AAAA,SAFZ;AAGI,QAAA,YAAY,EAAC,MAHjB;AAII,QAAA,SAAS,EAAE,IAJf;AAKI,QAAA,WAAW,EAAE,KALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAaQ,KAAKpB,KAAL,CAAWM,cAAX,IAA6BiB,QAAQ,CAACC,EAAT,KAAgB,KAA7C,GACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,KAAKzB,KAAL,CAAWO;AAApB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,GAEI,IAfZ,CA7BJ,CADJ;AAoDH;;;;EA/NqCZ,S;;SAArBE,Y;AA6OrB,IAAMW,MAAM,GAAGkB,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,IAAI,EAAE;AACFO,IAAAA,IAAI,EAAE,CADJ;AAEFC,IAAAA,eAAe,EAAE,SAFf;AAGFC,IAAAA,WAAW,EAAE,EAHX;AAIFC,IAAAA,YAAY,EAAE,EAJZ;AAKFC,IAAAA,UAAU,EAAE,CALV;AAMFC,IAAAA,aAAa,EAAE;AANb,GADuB;AAW7BC,EAAAA,QAAQ,EAAE;AACNN,IAAAA,IAAI,EAAE,CADA;AAENE,IAAAA,WAAW,EAAE,EAFP;AAGNC,IAAAA,YAAY,EAAE;AAHR,GAXmB;AAkB7BI,EAAAA,YAAY,EAAE;AACVL,IAAAA,WAAW,EAAE,EADH;AAEVC,IAAAA,YAAY,EAAE,EAFJ;AAGVC,IAAAA,UAAU,EAAE,CAHF;AAIVC,IAAAA,aAAa,EAAE,CAJL;AAKVG,IAAAA,WAAW,EAAE,CALH;AAMVC,IAAAA,WAAW,EAAE,MANH;AAOVC,IAAAA,YAAY,EAAE;AAPJ,GAlBe;AA2B7BC,EAAAA,eAAe,EAAE;AACbC,IAAAA,QAAQ,EAAE,EADG;AAEbC,IAAAA,KAAK,EAAE,MAFM;AAGbC,IAAAA,SAAS,EAAE;AAHE,GA3BY;AAgC7BC,EAAAA,QAAQ,EAAE;AACNH,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,KAAK,EAAE,WAFD;AAGNC,IAAAA,SAAS,EAAE;AAHL,GAhCmB;AAuC7BE,EAAAA,SAAS,EAAE;AACPC,IAAAA,QAAQ,EAAE,UADH;AAEPC,IAAAA,KAAK,EAAE,EAFA;AAGPC,IAAAA,MAAM,EAAE;AAHD,GAvCkB;AA6C7BtC,EAAAA,SAAS,EAAE;AACPmB,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE;AAFV,GA7CkB;AAiD7BnB,EAAAA,OAAO,EAAE;AACLsC,IAAAA,aAAa,EAAE,KADV;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLxB,IAAAA,MAAM,EAAE,EAHH;AAILO,IAAAA,UAAU,EAAE,CAJP;AAKLH,IAAAA,eAAe,EAAE,SALZ;AAMLqB,IAAAA,UAAU,EAAE;AANP,GAjDoB;AAyD7BC,EAAAA,cAAc,EAAE;AACZvB,IAAAA,IAAI,EAAE,CADM;AAEZwB,IAAAA,cAAc,EAAE,QAFJ;AAGZF,IAAAA,UAAU,EAAE;AAHA,GAzDa;AA8D7BpC,EAAAA,YAAY,EAAE;AACV2B,IAAAA,KAAK,EAAE,OADG;AAGVD,IAAAA,QAAQ,EAAE;AAHA,GA9De;AAmE7B7B,EAAAA,cAAc,EAAE;AACZiB,IAAAA,IAAI,EAAE,CADM;AAEZwB,IAAAA,cAAc,EAAE,QAFJ;AAGZF,IAAAA,UAAU,EAAE;AAHA,GAnEa;AAwE7BG,EAAAA,MAAM,EAAE;AACJJ,IAAAA,KAAK,EAAE,EADH;AAEJxB,IAAAA,MAAM,EAAE,EAFJ;AAGJ6B,IAAAA,SAAS,EAAE;AAHP,GAxEqB;AA6E7BvC,EAAAA,eAAe,EAAE;AACba,IAAAA,IAAI,EAAE,CADO;AAEbwB,IAAAA,cAAc,EAAE,QAFH;AAGbF,IAAAA,UAAU,EAAE;AAHC,GA7EY;AAkF7BK,EAAAA,OAAO,EAAE;AACLN,IAAAA,KAAK,EAAE,EADF;AAELxB,IAAAA,MAAM,EAAE,EAFH;AAGL6B,IAAAA,SAAS,EAAE;AAHN,GAlFoB;AAuF7BE,EAAAA,SAAS,EAAE;AACPf,IAAAA,KAAK,EAAE,OADA;AAGPD,IAAAA,QAAQ,EAAE;AAHH,GAvFkB;AA4F7BiB,EAAAA,kBAAkB,EAAE;AAChB5B,IAAAA,eAAe,EAAE,MADD;AAEhBJ,IAAAA,MAAM,EAAE,GAFQ;AAGhBiC,IAAAA,SAAS,EAAE;AAHK,GA5FS;AAiG7BpC,EAAAA,gBAAgB,EAAE;AACdkB,IAAAA,QAAQ,EAAE,EADI;AAEdC,IAAAA,KAAK,EAAE,SAFO;AAIdC,IAAAA,SAAS,EAAE,EAJG;AAKdN,IAAAA,WAAW,EAAE,CALC;AAMdC,IAAAA,WAAW,EAAE,MANC;AAOdC,IAAAA,YAAY,EAAE,CAPA;AAQdqB,IAAAA,SAAS,EAAE,GARG;AASdC,IAAAA,iBAAiB,EAAE,KATL;AAUdC,IAAAA,OAAO,EAAE;AAVK,GAjGW;AA6G7B3C,EAAAA,aAAa,EAAE;AACXW,IAAAA,eAAe,EAAE,MADN;AAEX6B,IAAAA,SAAS,EAAE,SAFA;AAGX5B,IAAAA,WAAW,EAAE,EAHF;AAIXC,IAAAA,YAAY,EAAE;AAJH,GA7Gc;AAmH7BZ,EAAAA,SAAS,EAAE;AACPqB,IAAAA,QAAQ,EAAE,EADH;AAEPC,IAAAA,KAAK,EAAE,SAFA;AAGPqB,IAAAA,UAAU,EAAE,MAHL;AAIPZ,IAAAA,UAAU,EAAE,QAJL;AAKPE,IAAAA,cAAc,EAAE;AALT;AAnHkB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, ScrollView, Text, TextInput, StyleSheet, TouchableOpacity, BackHandler, Image, Keyboard, Platform } from 'react-native';\r\n// import styles from './Detail.Style';\r\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\r\n// import LoadingView from \"../Components/LoadingView\";\r\n// import {localNoteDb, remoteNoteDb} from \"../const\";\r\n// import ImagePicker from 'react-native-image-picker';\r\n// import Toast from \"react-native-simple-toast\";\r\n// import PouchDB from \"../pouchdb\";\r\n// import moment from \"moment\";\r\n// import {imgDefault} from \"../images\";\r\n// import NoDataView from \"../Components/NoDataView\";\r\n\r\nexport default class DetailScreen extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        //this.idNote = this.props.navigation.state.params.idNote\r\n        this.refTextInputContent = null\r\n        this.refTextInputTitle = null\r\n        this.state = {\r\n            isLoading: false,\r\n            detailNote: null,\r\n            newImage: null,\r\n            isKeyboardShow: false,\r\n            keyboardHeight: 0,\r\n        }\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     BackHandler.removeEventListener('hardwareBackPress', this.handleBackPress)\r\n    //     handlerSync.cancel()\r\n    //     this.keyboardDidShowListener.remove()\r\n    //     this.keyboardDidHideListener.remove()\r\n    // }\r\n\r\n    // componentDidMount() {\r\n    //     BackHandler.addEventListener('hardwareBackPress', this.handleBackPress)\r\n    //     this.keyboardDidShowListener = Keyboard.addListener(\r\n    //         'keyboardDidShow',\r\n    //         this.keyboardDidShow\r\n    //     )\r\n    //     this.keyboardDidHideListener = Keyboard.addListener(\r\n    //         'keyboardDidHide',\r\n    //         this.keyboardDidHide\r\n    //     )\r\n    //     this.syncDb()\r\n    //     this.getDetailNoteFromDb()\r\n    // }\r\n\r\n    // handleBackPress = () => {\r\n    //     this.props.navigation.goBack()\r\n    //     this.props.navigation.state.params.returnFromDetail()\r\n    //     return true\r\n    // }\r\n\r\n    // keyboardDidShow = (e) => {\r\n    //     this.setState({\r\n    //         isKeyboardShow: true,\r\n    //         keyboardHeight: e.endCoordinates.height\r\n    //     })\r\n    // }\r\n\r\n    // keyboardDidHide = () => {\r\n    //     this.setState({isKeyboardShow: false})\r\n    // }\r\n\r\n    // syncDb = () => {\r\n    //     handlerSync = PouchDB.sync(remoteNoteDb, localNoteDb, {\r\n    //         live: true,\r\n    //         retry: true,\r\n    //     })\r\n    //         .on('change', (info) => {\r\n    //             // console.log(TAG, 'sync onChange', info)\r\n    //         })\r\n    //         .on('paused', (err) => {\r\n    //             // console.log(TAG, 'sync onPaused', err)\r\n    //             this.getDetailNoteFromDb()\r\n    //         })\r\n    //         .on('active', () => {\r\n    //             // console.log(TAG, 'sync onActive')\r\n    //         })\r\n    //         .on('denied', (err) => {\r\n    //             // console.log(TAG, 'sync onDenied', err)\r\n    //         })\r\n    //         .on('complete', (info) => {\r\n    //             // console.log(TAG, 'sync onComplete', info)\r\n    //         })\r\n    //         .on('error', (err) => {\r\n    //             // console.log(TAG, 'sync onError', err)\r\n    //         })\r\n    // }\r\n\r\n    // getDetailNoteFromDb = () => {\r\n    //     this.setState({isLoading: true})\r\n    //     localNoteDb\r\n    //         .get(this.idNote)\r\n    //         .then(result => {\r\n    //             // console.log(TAG, 'localNoteDb get', result)\r\n    //             this.setState({\r\n    //                 isLoading: false,\r\n    //                 detailNote: result\r\n    //             })\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.log(TAG, 'err find list note', err)\r\n    //             if (err.message === 'missing') {\r\n    //                 Toast.show('This note has been deleted')\r\n    //                 this.handleBackPress()\r\n    //             } else {\r\n    //                 this.setState({isLoading: false})\r\n    //                 Toast.show(err.message)\r\n    //             }\r\n    //         })\r\n    // }\r\n\r\n    // openGallery = () => {\r\n    //     ImagePicker.showImagePicker({\r\n    //         compressImageMaxWidth: 500,\r\n    //         compressImageMaxHeight: 500,\r\n    //         mediaType: 'photo',\r\n    //         multiple: false,\r\n    //     }, image => {\r\n    //         this.setState({newImage: image.data})\r\n    //     })\r\n    // }\r\n\r\n    // onSaveNotePress = () => {\r\n    //     Keyboard.dismiss()\r\n    //     this.updateNote()\r\n    // }\r\n\r\n    // updateNote = () => {\r\n    //     this.setState({isLoading: true})\r\n    //     localNoteDb\r\n    //         .upsert(this.idNote, doc => {\r\n    //             if (this.refTextInputTitle && this.refTextInputTitle._lastNativeText) {\r\n    //                 doc.title = this.refTextInputTitle._lastNativeText\r\n    //             }\r\n    //             if (this.state.newImage) {\r\n    //                 doc.img = this.state.newImage\r\n    //             }\r\n    //             if (this.refTextInputContent && this.refTextInputContent._lastNativeText) {\r\n    //                 doc.content = this.refTextInputContent._lastNativeText\r\n    //             }\r\n    //             doc.updated_at = moment().unix()\r\n    //             return doc\r\n    //         })\r\n    //         .then(response => {\r\n    //             if (response.updated) {\r\n    //                 Toast.show('Updated')\r\n    //                 this.setState({isLoading: false})\r\n    //             } else {\r\n    //                 Toast.show('Update fail, please try again')\r\n    //                 this.setState({isLoading: false})\r\n    //             }\r\n\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.log(TAG, err)\r\n    //             Toast.show(err.message)\r\n    //             this.setState({isLoading: false})\r\n    //         })\r\n    // }\r\n\r\n    // deleteNote = () => {\r\n    //     this.setState({isLoading: true})\r\n    //     localNoteDb.remove(this.idNote, this.state.detailNote._rev)\r\n    //         .then(response => {\r\n    //             if (response.ok) {\r\n    //                 this.handleBackPress()\r\n    //             } else {\r\n    //                 Toast.show('Delete note fail')\r\n    //                 this.setState({isLoading: false})\r\n    //             }\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.log(TAG, err)\r\n    //             Toast.show(err.message)\r\n    //             this.setState({isLoading: false})\r\n    //         })\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.toolbar}>\r\n                    <TouchableOpacity style={styles.viewWrapIcLeft} onPress={this.handleBackPress}>\r\n                        <MaterialCommunityIcons name={'arrow-left'} size={30} color={'white'}/>\r\n                    </TouchableOpacity>\r\n                    \r\n                    <View style={styles.viewWrapTitleToolbar}>\r\n                        <Text style={styles.titleToolbar}>Detail</Text>\r\n                    </View>\r\n\r\n                    <TouchableOpacity style={styles.viewWrapIcRight} onPress={this.deleteNote}>\r\n                        <MaterialCommunityIcons name={'delete'} size={30} color={'white'}/>\r\n                    </TouchableOpacity>\r\n                    \r\n                    <TouchableOpacity style={styles.viewWrapIcRight} onPress={this.onSaveNotePress}>\r\n                        <MaterialCommunityIcons name={'check'} size={30} color={'white'}/>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                <View style={styles.viewWrapTitle}>\r\n                    <TextInput\r\n                        style={styles.textTitle}\r\n                        ref={ref => this.refTextInputTitle = ref}\r\n                        defaultValue= 'Test Title' //{this.state.detailNote ? this.state.detailNote.title : ''}\r\n                        multiline={true}\r\n                        autoCorrect={false}\r\n                    />\r\n                </View>\r\n\r\n                <ScrollView showsVerticalScrollIndicator={false}>\r\n                    <View style={styles.body}>\r\n\r\n                        <TextInput\r\n                            style={styles.textInputContent}\r\n                            ref={ref => this.refTextInputContent = ref}\r\n                            defaultValue='test' //{this.state.detailNote.content}\r\n                            multiline={true}\r\n                            autoCorrect={false}\r\n                        />\r\n                    </View>\r\n\r\n                    {\r\n                        this.state.isKeyboardShow && Platform.OS === 'ios' ?\r\n                            <View style={{height: this.state.keyboardHeight}}/> :\r\n                            null\r\n                    }\r\n                </ScrollView>\r\n            </View>\r\n        )\r\n\r\n\r\n    }\r\n\r\n    renderLoading = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <LoadingView/>\r\n            )\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    body: {\r\n        flex: 1,\r\n        backgroundColor: '#f4f4f6',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        paddingTop: 5,\r\n        paddingBottom: 5\r\n    },\r\n\r\n    // List\r\n    viewList: {\r\n        flex: 1,\r\n        paddingLeft: 15,\r\n        paddingRight: 15\r\n    },\r\n\r\n    // Item\r\n    viewWrapItem: {\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n        borderWidth: 1,\r\n        borderColor: 'grey',\r\n        borderRadius: 5\r\n    },\r\n    textDescription: {\r\n        fontSize: 12,\r\n        color: 'grey',\r\n        marginTop: 10\r\n    },\r\n    textTime: {\r\n        fontSize: 12,\r\n        color: 'lightgrey',\r\n        marginTop: 5\r\n    },\r\n\r\n    // Btn\r\n    btnAddNew: {\r\n        position: 'absolute',\r\n        right: 20,\r\n        bottom: 20\r\n    },\r\n\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#f4f4f6'\r\n    },\r\n    toolbar: {\r\n        flexDirection: 'row',\r\n        width: '100%',\r\n        height: 48, //; 88; 78,\r\n        paddingTop: 0,//; 40; 30,\r\n        backgroundColor: '#2ebe60',\r\n        alignItems: 'center'\r\n    },\r\n    titleContainer: {\r\n        flex: 5,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    titleToolbar: {\r\n        color: 'white',\r\n        // fontFamily: fontFamily.bold,\r\n        fontSize: 18,\r\n    },\r\n    viewWrapIcLeft: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    icLeft: {\r\n        width: 23,\r\n        height: 23,\r\n        tintColor: 'white'\r\n    },\r\n    viewWrapIcRight: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    icRight: {\r\n        width: 23,\r\n        height: 23,\r\n        tintColor: 'white'\r\n    },\r\n    textRight: {\r\n        color: 'white',\r\n        // fontFamily: fontFamily.medium,\r\n        fontSize: 14,\r\n    },\r\n    viewHorizontalLine: {\r\n        backgroundColor: 'grey',\r\n        height: 0.5,\r\n        alignSelf: 'stretch'\r\n    },\r\n    textInputContent: {\r\n        fontSize: 14,\r\n        color: '#919191',\r\n        //fontFamily: fontFamily.regular,\r\n        marginTop: 15,\r\n        borderWidth: 1,\r\n        borderColor: 'grey',\r\n        borderRadius: 5,\r\n        minHeight: 100,\r\n        textAlignVertical: 'top',\r\n        padding: 10,\r\n    },\r\n    viewWrapTitle: {\r\n        backgroundColor: 'grey',\r\n        alignSelf: 'stretch',\r\n        paddingLeft: 10,\r\n        paddingRight: 10\r\n    },\r\n    textTitle: {\r\n        fontSize: 14,\r\n        color: '#30333a',\r\n        fontWeight: 'bold',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n        //fontFamily: fontFamily.demiBold\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}