{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\IMPORTANT\\\\01. Kuliah\\\\Semester 6\\\\Pam\\\\Tubes-PAM\\\\components\\\\view\\\\Home.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nvar handlerSync = null;\n\nvar Home = function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n\n    _this.handleBackPress = function () {\n      Alert.alert(\"Confirm\", \"Ingin keluar dari aplikasi?\", [{\n        text: \"Ya\",\n        onPress: function onPress() {\n          return BackHandler.exitApp();\n        }\n      }, {\n        text: \"Tidak\"\n      }]);\n      return true;\n    };\n\n    _this.returnFromDetail = function () {\n      _this.isAtCurrentScreen = true;\n\n      _this.getListNoteFromDb();\n    };\n\n    _this.returnFromAddNewNote = function () {\n      _this.isAtCurrentScreen = true;\n\n      _this.getListNoteFromDb();\n    };\n\n    _this.onAddNewPress = function () {\n      _this.isAtCurrentScreen = false;\n\n      _this.props.navigation.navigate('AddNewNoteScreen', {\n        returnFromAddNewNote: _this.returnFromAddNewNote.bind(_assertThisInitialized(_this))\n      });\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        style: styles.viewWrapItem,\n        onPress: function onPress() {\n          _this.isAtCurrentScreen = false;\n\n          _this.props.navigation.navigate('DetailScreen', {\n            idNote: item._id,\n            returnFromDetail: _this.returnFromAddNewNote.bind(_assertThisInitialized(_this))\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.textTitle,\n        numberOfLines: 1,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }\n      }, item.title));\n    };\n\n    _this.renderItemSeparator = function () {\n      return React.createElement(View, {\n        style: {\n          height: 10\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 16\n        }\n      });\n    };\n\n    _this.renderFooterList = function () {\n      return React.createElement(View, {\n        style: {\n          height: 10\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this.state = {\n      arrNote: [],\n      isLoading: false\n    };\n    _this.isAtCurrentScreen = true;\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      BackHandler.addEventListener('hardwareBackPress', this.handleBackPress);\n      this.syncDb();\n      this.getListNoteFromDb();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.toolbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.titleContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.titleToolbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }\n      }, \"Home\"))), React.createElement(View, {\n        style: styles.body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }, this.state.arrNote && this.state.arrNote.length > 0 ? React.createElement(FlatList, {\n        style: styles.viewList,\n        data: this.state.arrNote,\n        showsVerticalScrollIndicator: false,\n        ItemSeparatorComponent: this.renderItemSeparator,\n        ListHeaderComponent: this.renderFooterList,\n        ListFooterComponent: this.renderFooterList,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        renderItem: this.renderItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }) : React.createElement(View, {\n        onRetryPress: this.getListNoteFromDb,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.btnAddNew,\n        onPress: this.onAddNewPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, React.createElement(MaterialCommunityIcons, {\n        name: \"plus-circle\",\n        size: 50,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport { Home as default };\nvar styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    backgroundColor: 'navy'\n  },\n  viewList: {\n    flex: 1,\n    paddingLeft: 15,\n    paddingRight: 15\n  },\n  viewWrapItem: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    borderWidth: 1,\n    borderColor: 'grey',\n    borderRadius: 5\n  },\n  textTitle: {\n    fontSize: 'medium',\n    fontWeight: 'bold',\n    color: 'grey'\n  },\n  textDescription: {\n    fontSize: 'small',\n    color: 'grey',\n    marginTop: 10\n  },\n  textTime: {\n    fontSize: 'small',\n    color: 'lightgrey',\n    marginTop: 5\n  },\n  btnAddNew: {\n    position: 'absolute',\n    right: 20,\n    bottom: 20\n  }\n});","map":{"version":3,"sources":["D:/IMPORTANT/01. Kuliah/Semester 6/Pam/Tubes-PAM/components/view/Home.js"],"names":["React","Component","MaterialCommunityIcons","handlerSync","Home","props","handleBackPress","Alert","alert","text","onPress","BackHandler","exitApp","returnFromDetail","isAtCurrentScreen","getListNoteFromDb","returnFromAddNewNote","onAddNewPress","navigation","navigate","bind","renderItem","item","styles","viewWrapItem","idNote","_id","textTitle","title","renderItemSeparator","height","renderFooterList","state","arrNote","isLoading","addEventListener","syncDb","container","toolbar","titleContainer","titleToolbar","body","length","viewList","index","toString","btnAddNew","StyleSheet","create","flex","backgroundColor","paddingLeft","paddingRight","paddingTop","paddingBottom","borderWidth","borderColor","borderRadius","fontSize","fontWeight","color","textDescription","marginTop","textTime","position","right","bottom"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport { Alert, BackHandler, FlatList, StatusBar, Text, TouchableOpacity, View, StyleSheet } from 'react-native';\r\n// import PouchDB from '../pouchdb';\r\n//import {localNoteDb, nameIndex, remoteNoteDb} from \"../const\";\r\n//import moment from 'moment'\r\n//import Toast from \"react-native-simple-toast\";\r\n//import LoadingView from \"../Components/LoadingView\";\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\n//import colors from \"../Themes/Colors\";\r\n//import NoDataView from \"../Components/NoDataView\";\r\n\r\nlet handlerSync = null\r\n\r\nexport default class Home extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            arrNote: [],\r\n            isLoading: false\r\n        }\r\n        this.isAtCurrentScreen = true\r\n    }\r\n\r\n    // componentWillUnmount(){\r\n    //     BackHandler.removeEventListener('hardwareBackPress',this.handleBackPress)\r\n    //     handlerSync.cancel()\r\n    // }\r\n\r\n    componentDidMount(){\r\n        BackHandler.addEventListener('hardwareBackPress',this.handleBackPress)\r\n        this.syncDb()\r\n        this.getListNoteFromDb()\r\n    }\r\n\r\n    handleBackPress = () =>{\r\n        Alert.alert(\"Confirm\", \"Ingin keluar dari aplikasi?\", [\r\n            {text: \"Ya\", onPress:()=>BackHandler.exitApp()},\r\n            {text: \"Tidak\"}\r\n        ])\r\n        return true\r\n    }\r\n\r\n    // syncDb = () => {\r\n    //     this.setState({isLoading: true})\r\n    //     handlerSync = PouchDB.sync(remoteNoteDb, localNoteDb, {\r\n    //         live: true,\r\n    //         retry: true,\r\n    //     })\r\n\r\n    //     .on('change',(info)=>{\r\n\r\n    //     })\r\n    //     .on('paused', (err)=>{\r\n    //         if(this.isAtCurrentScreen){\r\n    //             this.getListNoteFromDb()\r\n    //         }\r\n    //     })\r\n    //     .on('active', () =>{\r\n\r\n    //     })\r\n    //     .on('denied', (err)=>{\r\n\r\n    //     })\r\n    //     .on('complete',(info)=>{\r\n\r\n    //     })\r\n    //     .on('error', (err)=>[\r\n\r\n    //     ])\r\n    // }\r\n\r\n    // getListNoteFromDb = () =>{\r\n    //     this.setState({isLoading: true})\r\n    //     localNoteDb\r\n    //         .find({\r\n    //             selector:{\r\n    //                 updated_at:{$gt:true}\r\n    //             },\r\n    //             fields:['_id','title','updated_at'],\r\n    //             use_index: nameIndex.updated_at,\r\n    //             sort: [{updated_at: 'desc'}]\r\n    //         })\r\n    //         .then(result=>{\r\n    //             this.setState({\r\n    //                 isLoading: false,\r\n    //                 arrNote: [...result.docs]\r\n    //             })\r\n    //         })\r\n    //         .catch(err=>{\r\n    //             this.setState({isLoading:false})\r\n    //             //Toast.show(err.message)\r\n    //         })\r\n    // }\r\n\r\n    returnFromDetail = () =>{\r\n        this.isAtCurrentScreen=true\r\n        this.getListNoteFromDb()\r\n    }\r\n\r\n    returnFromAddNewNote = () =>{\r\n        this.isAtCurrentScreen = true\r\n        this.getListNoteFromDb()\r\n    }\r\n\r\n    onAddNewPress = () =>{\r\n        this.isAtCurrentScreen = false\r\n        this.props.navigation.navigate('AddNewNoteScreen',{\r\n            returnFromAddNewNote: this.returnFromAddNewNote.bind(this)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <View style={styles.container}>\r\n                <StatusBar barStyle=\"light-content\"/>\r\n                \r\n                <View style={styles.toolbar}>\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={styles.titleToolbar}>Home</Text>\r\n                    </View>\r\n                </View>\r\n\r\n                <View style={styles.body}>\r\n                    {this.state.arrNote && this.state.arrNote.length > 0?\r\n                        <FlatList\r\n                            style={styles.viewList}\r\n                            data={this.state.arrNote}\r\n                            showsVerticalScrollIndicator={false}\r\n                            ItemSeparatorComponent={this.renderItemSeparator}\r\n                            ListHeaderComponent={this.renderFooterList}\r\n                            ListFooterComponent={this.renderFooterList}\r\n                            keyExtractor={(item, index) => index.toString()}\r\n                            renderItem={this.renderItem}\r\n                        />:\r\n                        <View onRetryPress={this.getListNoteFromDb}/>\r\n                    }\r\n\r\n                    <TouchableOpacity style={styles.btnAddNew} onPress={this.onAddNewPress}>\r\n                        <MaterialCommunityIcons name={\"plus-circle\"} size={50} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    renderItem = ({item}) => {\r\n        return(\r\n            <TouchableOpacity style={styles.viewWrapItem}\r\n                onPress={()=>{\r\n                    this.isAtCurrentScreen = false\r\n                    this.props.navigation.navigate('DetailScreen',{\r\n                        idNote: item._id,\r\n                        returnFromDetail: this.returnFromAddNewNote.bind(this)\r\n                    })\r\n                }}\r\n            >\r\n                <Text style={styles.textTitle} numberOfLines={1}>{item.title}</Text>\r\n                {/* <Text style={styles.textTime} numberOfLines={1}>{`${moment.unix(item.updated_at).format('MM-DD-YYYY HH:mm')}`}</Text> */}\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n\r\n    renderItemSeparator = () => {\r\n        return <View style={{height: 10}}/>\r\n    }\r\n\r\n    renderFooterList = () => {\r\n        return (\r\n            <View style={{height: 10}}/>\r\n        )\r\n    }\r\n\r\n    // renderLoading = () => {\r\n    //     if (this.state.isLoading) {\r\n    //         return (\r\n    //             <LoadingView/>\r\n    //         )\r\n    //     } else {\r\n    //         return null\r\n    //     }\r\n    // }\r\n\r\n    \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    body: {\r\n        flex: 1,\r\n        backgroundColor: 'navy',\r\n    },\r\n\r\n    // List\r\n    viewList: {\r\n        flex: 1,\r\n        paddingLeft: 15,\r\n        paddingRight: 15\r\n    },\r\n\r\n    // Item\r\n    viewWrapItem: {\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n        borderWidth: 1,\r\n        borderColor: 'grey',\r\n        borderRadius: 5\r\n    },\r\n    textTitle: {\r\n        fontSize: 'medium',\r\n        fontWeight: 'bold',\r\n        color: 'grey'\r\n    },\r\n    textDescription: {\r\n        fontSize: 'small',\r\n        color: 'grey',\r\n        marginTop: 10\r\n    },\r\n    textTime: {\r\n        fontSize: 'small',\r\n        color: 'lightgrey',\r\n        marginTop: 5\r\n    },\r\n\r\n    // Btn\r\n    btnAddNew: {\r\n        position: 'absolute',\r\n        right: 20,\r\n        bottom: 20\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}